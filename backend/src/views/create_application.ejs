<!DOCTYPE html>
<html lang="en">
    <head>
        <title> create application </title>
    </head>
    <body>
        <%- include('partials/navbar', navbardata )%>
        <div id="av-form">
            <label for="availability">Add Availability</label>
            <p>
                From: <input type="date" class="avail" id="availability" name="from"
                min="<%= start_date%>" value="<%= start_date%>"/>
            </p>
            <p>
                To: <input type="date" class="avail" id="availability" name="to"
                min="<%= start_date%>" value="<%= start_date%>"/>
            </p>
            <button onclick="add_avail()">Add availability</button>
        </div>
        <div id="comp-form">
            <label for="competence"> Add Competence </label>
            <p>
                Competency: <select id="competence" class="competence" name="competence">
                    <% comps.map(c => { %>
                        <option value="<%= c.id %>"><%= c.name %></option>
                    <%}) %>
                </select>
            </p>
            <p>Years of experience: <input type="number" class="competence" name="exp" id="exp"/></p>
            <button onclick="add_comp()">Add competency</button>
        </div>
        <div id="review-box">
            <div id="review" style="border: 1px solid" hidden></div>
            <p><button id="send-btn" onclick="post_application(event)" value="<%= path %>">Send application</button></p>
        </div>
    </body>
    <script>
        const state = {};
        let availabilities = [];
        let competencies = [];

        function avail_listener() {
            const elem = document.getElementById("av-form");
            elem.addEventListener('change', e => {
                let elems = document.getElementsByClassName('avail')
                state[e.target.name] = e.target.value
            })
        }

        function comp_listener() {
            const elem = document.getElementById('comp-form')
            elem.addEventListener('change', e => {
                if (e.target.name === "competence"){
                    console.log(e.target)
                    let name = e.target[e.target.selectedIndex].innerText
                    state[e.target.name] = {id: e.target.value, name: name}
                } else {
                    state[e.target.name] = e.target.value 
                }
            })
        }

        function add_avail() {
            if (state.from && state.to){
                let obj = {from: state.from, to: state.to}
                if (already_exists(availabilities, obj)) return;
                availabilities = availabilities.concat({from: state.from, to: state.to})
            }
            upd_review_box();
        }

        function add_comp() {
            if (state.competence && state.exp){
                let obj = {competency: state.competence, experience: state.exp}
                if (already_exists(competencies, obj)) return;
                competencies = [...competencies, {competency: state.competence, experience: state.exp}]
            }
            upd_review_box();
        }

        function upd_review_box (){
            const box = document.getElementById('review');
            
            if (availabilities.length === 0 && competencies.length === 0){
                box.setAttribute('hidden', "hideme")
            } else {
                box.removeAttribute('hidden')
            }

            box.innerHTML = '';

            let h2 = document.createElement('h2')
            h2.innerText = "Application review:"
            box.appendChild(h2)

            let h3 = document.createElement('h3')
            h3.innerText = "Availabilities:"
            box.appendChild(h3)

            const ul_av = document.createElement("ul");
            ul_av.setAttribute('id', 'avail-list')

            availabilities.forEach(e => {
                let li = document.createElement('li')
                let text = document.createTextNode(e.from + " - " + e.to)
                li.appendChild(text)
                ul_av.appendChild(li); 
            })

            box.appendChild(ul_av)

            let h3_2 = document.createElement('h3')
            h3_2.innerText = "Competencies:"
            box.appendChild(h3_2)

            const ul_co = document.createElement("ul");
            ul_co.setAttribute('id', 'avail-list')

            competencies.forEach(e => {
                let li = document.createElement('li')
                let text = document.createTextNode(e.competency.name + " - " + e.experience + " years")
                li.appendChild(text)
                ul_co.appendChild(li); 
            })

            box.appendChild(ul_co)

        }

        // not so great code
        function already_exists (objArr, obj){
            if (objArr.length === 0) return false; 
            const keys0 = Object.keys(obj);
            const keys1 = Object.keys(objArr[0]);

            keys0.forEach((k, i) => {
                if (keys1[i] !== k) return false;
            })

            let allequal = true;
            let alreadyexists = false;
            objArr.forEach(e => {
                allequal = true;
                keys0.forEach(k => {
                    if (e[k] !== obj[k]){
                        allequal = false;
                    }
                })
                if (allequal){
                    alreadyexists = true;
                };
            })
            return alreadyexists;
        }

        async function post_application (event){
            event.preventDefault();
            if (competencies.length === 0 || availabilities.length === 0) {
                alert ("Please enter availibilities and competencies!")
                return;
            }
            const btn = document.getElementById('send-btn')
            const URL = window.location.protocol + '//' + window.location.host + btn.value;
            const payload = {availabilities: availabilities, competencies: competencies}
            const options = {
                method: 'POST',
                headers:{'Content-Type': 'application/json'},
                credentials: 'include',
                body: JSON.stringify(payload)
            }
            try {
                const resp = await fetch(URL, options)
            } catch (error) {
                console.log(error)
            }
        }

        avail_listener();
        comp_listener();
    </script>
</html>